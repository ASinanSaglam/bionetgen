classdef bngSpecies < bngLabels
    %BNGSPECIES derived from bngLabels class, used for species.
    %   bngSpecies Properties: (unique to bngParam)
    %       initMethod  -    string, indicating name of function m-file
    %           used for initializing species under the model. The m-file is
    %           created by BioNetGen and should be accessible to MatLab
    %
    %   bngSpecies Methods:
    %       bngSpecies      -   creates a bngSpecies object 
    %
    %       initializeAll   -   use a vector of parameter values to
    %                           initialize all species
    %
    %       initializeOne   -   use a vector of parameter values to
    %                           initialize a specific species
    %
    %       updateOne       -   use a vector of parameter values to
    %                           re-initialize a specific species in a
    %                           vector of species concentrations
    %
    %   Use 'help bngLabels' for additional methods inherited from the
    %   superclass

    
    properties (SetAccess = private)
        initMethod % name of function m-file that initializes species
    end 
    
    methods
        function obj = bngSpecies(species_labels,initMethodName)
            % bngSpecies() creates a bngSpecies object
            % USAGE:
            % 
            % obj = bngSpecies(species_labels,initMethodName) 
            %   species_labels - cell array of species names
            %
            %   initMethodName - string, indicating name of function m-file
            %           used for initializing species under the model. The m-file is
            %           created by BioNetGen and should be accessible to MatLab
   
            assert(iscellstr(species_labels) && min(size(species_labels))==1,'Provide a one-dimensional cell array of species labels');
            assert(ischar(initMethodName),'Provide the name of the initialize species method generated by BNG');
            
            obj = obj@bngLabels(species_labels);
            obj.initMethod = initMethodName;
        end
        
        function species_init = initializeAll(obj,params)
            % obj.initializeAll() uses a parameter vector to create vector
            % of species concentrations
            %
            % USAGE:
            %
            % species_init = obj.initializeAll(params)
            %   obj  - bngSpecies object
            %   params - vector of numeric values
            fname = str2func(obj.initMethod);
            species_init = fname(params);
        end
        
        function species_init_single = initializeOne(obj,label,params)
            % obj.initializeOne() uses a parameter vector to initialize
            % concentration of a single species
            %
            % USAGE:
            %
            % species_init_single = obj.initializeOne(params)
            %   obj  - bngSpecies object
            %   params - vector of numeric values
            ind = obj.getIndex(label);
            fname = str2func(obj.initMethod);
            species_init = fname(params);
            species_init_single = species_init(ind);
        end
        
        function species_out = updateOne(obj,label,params,species_in)
            % obj.updateOne() uses a parameter vector to create vector
            % of species concentrations
            %
            % USAGE:
            %
            % species_out = pbj.updateOne(label,params,species_in)
            %   obj         -   bngSpecies object
            %   label       -   name of species to be updated
            %   params      -   vector of numeric values of parameters
            %   species_in  -   vector of numeric values of species
            %                       concentrations
            species_out = species_in;
            
            fname = str2func(obj.initMethod);
            temp = fname(params);
            
            ind = obj.getIndex(label);
            species_out(ind) = temp(ind);
        end
    end
    
end

