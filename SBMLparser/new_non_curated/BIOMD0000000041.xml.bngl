###
#@BQB_IS_VERSION_OF:['http://identifiers.org/go/GO:0006600']
#@creatorName:'Le Novre Nicolas'
#@creatorEmail:'lenov@ebi.ac.uk'
#@BQB_HAS_TAXON:['http://identifiers.org/biomodels.db/BIOMD0000000041', 'http://identifiers.org/pubmed/10751324', 'http://identifiers.org/taxonomy/9984', 'http://identifiers.org/doi/10.1038/npre.2007.1317.1', 'http://identifiers.org/biomodels.db/MODEL6622188656']
#@notes:'This is an atomized translation of an SBML model created on 17/03/2015. The original model has 10 molecules and 9 reactions. The translated model has 3 molecules and 9 rules'
###
begin model
begin parameters
	r1_V_1 4600.000000
	r1_Ka_1 800.000000
	r1_Kb_1 20.000000
	r2_Vf_2 2658.000000
	r2_Kia_2 750.000000
	r2_Kb_2 5200.000000
	r2_Vb_2 11160.000000
	r2_Kic_2 204.800000
	r2_Kd_2 500.000000
	r2_Kib_2 28800.000000
	r2_Kid_2 1600.000000
	r3_Vf_3 6966.000000
	r3_Kia_3 900.000000
	r3_Kb_3 15500.000000
	r3_Vb_3 29250.000000
	r3_Kic_3 222.400000
	r3_Kd_3 1670.000000
	r3_Kib_3 34900.000000
	r3_Kid_3 4730.000000
	r4_v_4 4600.000000
	r5_k2_5 18.400000
	r6_k1_6 14.600000
	r7_k1_7 8.160000
	r8_k1_8 14.600000
	r9_k1_9 8.160000
end parameters
begin compartments
	IMS  3  0.0625
	CYT  3  0.75
	cell 3 1.0
end compartments
begin molecule types
	ATP(genericMod~ADP~0~ADPADP,imod~I~0)
	Cr(Pmod~P~0,imod~I~0~II)
	Pi(imod~I~0)
end molecule types
begin seed species
	@CYT:ATP(genericMod~0,imod~0) 9700.0 #ATP #ATP
	@CYT:Cr(Pmod~0,imod~0) 26000.0 #Cr #Cr
	@IMS:Pi(imod~I) 32000.0 #Pii #Pi
end seed species
begin observables
	Species ADPi ATP(genericMod~ADPADP,imod~I) #ADPi
	Species ATPi ATP(genericMod~0,imod~I) #ATPi
	Species Cri Cr(Pmod~0,imod~I) #Cri
	Species PCri Cr(Pmod~P,imod~II) #PCri
	Species PCr Cr(Pmod~P,imod~0) #PCr
	Species ADP ATP(genericMod~ADP,imod~0) #ADP
	Species ATP ATP(genericMod~0,imod~0) #ATP
	Species Cr Cr(Pmod~0,imod~0) #Cr
	Species Pii Pi(imod~I) #Pii
	Species Pi Pi(imod~0) #Pi
end observables
begin functions
	functionRate0() = if(4600.0 / (800.0 * 20.0 * (1 + ADPi / 800.0 + Pii / 20.0 + ADPi * Pii / (800.0 * 20.0)))>= 0,4600.0 / (800.0 * 20.0 * (1 + ADPi / 800.0 + Pii / 20.0 + ADPi * Pii / (800.0 * 20.0))),0)
	functionRate0m() = if(if(ATPi>0,4600.0 * ADPi * Pii / (800.0 * 20.0 * (1 + ADPi / 800.0 + Pii / 20.0 + ADPi * Pii / (800.0 * 20.0)))/ATPi,0)< 0,-(if(ATPi>0,4600.0 * ADPi * Pii / (800.0 * 20.0 * (1 + ADPi / 800.0 + Pii / 20.0 + ADPi * Pii / (800.0 * 20.0)))/ATPi,0)),0)
	functionRate1() = if(if(Cri>0,if(ATPi>0,(2658.0 * ATPi * Cri / (750.0 * 5200.0) -11160.0 * ADPi * PCri / (204.8 * 500.0)) / (1 + Cri / 28800.0 + PCri / 1600.0 + ATPi * (1 / 750.0 + Cri / (750.0 * 5200.0)) + ADPi * (1 / 204.8 + Cri / (204.8 * 28800.0) + PCri / (1600.0 * (204.8 * 500.0 / 1600.0))))/ATPi,0)/Cri,0)>= 0,if(Cri>0,if(ATPi>0,(2658.0 * ATPi * Cri / (750.0 * 5200.0) -11160.0 * ADPi * PCri / (204.8 * 500.0)) / (1 + Cri / 28800.0 + PCri / 1600.0 + ATPi * (1 / 750.0 + Cri / (750.0 * 5200.0)) + ADPi * (1 / 204.8 + Cri / (204.8 * 28800.0) + PCri / (1600.0 * (204.8 * 500.0 / 1600.0))))/ATPi,0)/Cri,0),0)
	functionRate1m() = if(if(PCri>0,if(ADPi>0,(2658.0 * ATPi * Cri / (750.0 * 5200.0) -11160.0 * ADPi * PCri / (204.8 * 500.0)) / (1 + Cri / 28800.0 + PCri / 1600.0 + ATPi * (1 / 750.0 + Cri / (750.0 * 5200.0)) + ADPi * (1 / 204.8 + Cri / (204.8 * 28800.0) + PCri / (1600.0 * (204.8 * 500.0 / 1600.0))))/ADPi,0)/PCri,0)< 0,-(if(PCri>0,if(ADPi>0,(2658.0 * ATPi * Cri / (750.0 * 5200.0) -11160.0 * ADPi * PCri / (204.8 * 500.0)) / (1 + Cri / 28800.0 + PCri / 1600.0 + ATPi * (1 / 750.0 + Cri / (750.0 * 5200.0)) + ADPi * (1 / 204.8 + Cri / (204.8 * 28800.0) + PCri / (1600.0 * (204.8 * 500.0 / 1600.0))))/ADPi,0)/PCri,0)),0)
	functionRate2() = if(if(ATP>0,if(Cr>0,(6966.0 * ATP * Cr / (900.0 * 15500.0) -29250.0 * ADP * PCr / (222.4 * 1670.0)) / (1 + Cr / 34900.0 + PCr / 4730.0 + ATP * (1 / 900.0 + Cr / (900.0 * 15500.0)) + ADP * (1 / 222.4 + Cr / (222.4 * 34900.0) + PCr / (4730.0 * (222.4 * 1670.0 / 4730.0))))/Cr,0)/ATP,0)>= 0,if(ATP>0,if(Cr>0,(6966.0 * ATP * Cr / (900.0 * 15500.0) -29250.0 * ADP * PCr / (222.4 * 1670.0)) / (1 + Cr / 34900.0 + PCr / 4730.0 + ATP * (1 / 900.0 + Cr / (900.0 * 15500.0)) + ADP * (1 / 222.4 + Cr / (222.4 * 34900.0) + PCr / (4730.0 * (222.4 * 1670.0 / 4730.0))))/Cr,0)/ATP,0),0)
	functionRate2m() = if(if(ADP>0,if(PCr>0,(6966.0 * ATP * Cr / (900.0 * 15500.0) -29250.0 * ADP * PCr / (222.4 * 1670.0)) / (1 + Cr / 34900.0 + PCr / 4730.0 + ATP * (1 / 900.0 + Cr / (900.0 * 15500.0)) + ADP * (1 / 222.4 + Cr / (222.4 * 34900.0) + PCr / (4730.0 * (222.4 * 1670.0 / 4730.0))))/PCr,0)/ADP,0)< 0,-(if(ADP>0,if(PCr>0,(6966.0 * ATP * Cr / (900.0 * 15500.0) -29250.0 * ADP * PCr / (222.4 * 1670.0)) / (1 + Cr / 34900.0 + PCr / 4730.0 + ATP * (1 / 900.0 + Cr / (900.0 * 15500.0)) + ADP * (1 / 222.4 + Cr / (222.4 * 34900.0) + PCr / (4730.0 * (222.4 * 1670.0 / 4730.0))))/PCr,0)/ADP,0)),0)
	functionRate4() =  18.4
	functionRate4m() =  18.4
	functionRate5() =  14.6
	functionRate5m() =  14.6
	functionRate6() =  8.16
	functionRate6m() =  8.16
	functionRate7() =  14.6
	functionRate7m() =  14.6
	functionRate8() =  8.16
	functionRate8m() =  8.16
end functions
begin reaction rules
	OxPhos: ATP(genericMod~ADPADP,imod~I)@IMS + Pi(imod~I)@IMS <-> ATP(genericMod~0,imod~I)@IMS functionRate0(),functionRate0m()
	MiCK: ATP(genericMod~0,imod~I)@IMS + Cr(Pmod~0,imod~I)@IMS <-> ATP(genericMod~ADPADP,imod~I)@IMS + Cr(Pmod~P,imod~II)@IMS functionRate1(),functionRate1m()
	MMCK: ATP(genericMod~0,imod~0)@CYT + Cr(Pmod~0,imod~0)@CYT <-> Cr(Pmod~P,imod~0)@CYT + ATP(genericMod~ADP,imod~0)@CYT functionRate2(),functionRate2m()
	ATPase: ATP(genericMod~0,imod~0)@CYT -> ATP(genericMod~ADP,imod~0)@CYT + Pi(imod~0)@CYT r4_v_4
	Pi_diffusion: Pi(imod~I)@IMS <-> Pi(imod~0)@CYT functionRate4(),functionRate4m()
	Cr_diffusion: Cr(Pmod~0,imod~I)@IMS <-> Cr(Pmod~0,imod~0)@CYT functionRate5(),functionRate5m()
	ADP_diffusion: ATP(genericMod~ADPADP,imod~I)@IMS <-> ATP(genericMod~ADP,imod~0)@CYT functionRate6(),functionRate6m()
	PCr_diffusion: Cr(Pmod~P,imod~II)@IMS <-> Cr(Pmod~P,imod~0)@CYT functionRate7(),functionRate7m()
	ATP_diffusion: ATP(genericMod~0,imod~I)@IMS <-> ATP(genericMod~0,imod~0)@CYT functionRate8(),functionRate8m()
end reaction rules
end model
