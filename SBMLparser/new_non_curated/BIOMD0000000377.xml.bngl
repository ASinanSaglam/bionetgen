###
#@BQB_IS_VERSION_OF:['http://identifiers.org/go/GO:0061469']
#@BQB_OCCURS_IN:['http://identifiers.org/bto/BTO:0000783']
#@notes:'This is an atomized translation of an SBML model created on 17/03/2015. The original model has 4 molecules and 0 reactions. The translated model has 4 molecules and 4 rules'
#@creatorEmail:'ajmera@ebi.ac.uk'
#@creatorName:'Ajmera Ishan'
#@BQB_HAS_TAXON:['http://identifiers.org/pubmed/11106596', 'http://identifiers.org/taxonomy/9606', 'http://identifiers.org/biomodels.db/MODEL0911270001', 'http://identifiers.org/pubmed/1850840', 'http://identifiers.org/biomodels.db/BIOMD0000000377']
###
begin model
begin parameters
	Cm 4524.0
	Vm -22.0
	VCa 100.0
	gCa 280.0
	#minf 0.0573241758989
	sm 7.5
	#ICa -2295.26000299
	#IK 1443.0
	VK -80.0
	gK 1300.0
	lambda 1.1
	tnbar 8.3
	Vn -9.0
	sn 10.0
	#taun 8.031947643
	#ninf 0.0322954646985
	#Is1 74.0
	gs1 20.0
	#s1inf 0.00247262315663
	Vs1 -40.0
	ss1 0.5
	taus1 1000.0
	Vs2 -42.0
	#s2inf 0.0758581800212
	ss2 0.4
	gs2 32.0
	taus2 120000.0
	#Is2 513.856
	#Il -75.0
	gl 25.0
	Vl -40.0
	#parameter_1 587.856
end parameters
begin compartments
	Compartment  3  1.0
end compartments
begin molecule types
	V()
	n()
	s1()
	s2()
end molecule types
begin seed species
	@Compartment:n() 0.03 #n #n
	@Compartment:s1() 0.1 #s1 #s1
	@Compartment:s2() 0.434 #s2 #s2
end seed species
begin observables
	Species V V() #V
	Species n n() #n
	Species s1 s1() #s1
	Species s2 s2() #s2
end observables
begin functions
	s2inf() = 1 / (1 + exp((Vs2 -V) / ss2))
	Is2() = gs2 * s2 * (V -VK)
	taun() = tnbar / (1 + exp((V -Vn) / sn))
	minf() = 1 / (1 + exp((Vm -V) / sm))
	IK() = gK * n * (V -VK)
	s1inf() = 1 / (1 + exp((Vs1 -V) / ss1))
	Il() = gl * (V -Vl)
	ninf() = 1 / (1 + exp((Vn -V) / sn))
	Is1() = gs1 * s1 * (V -VK)
	armRateV() = 0
	armRaten() = 0
	armRates1() = 0
	armRates2() = 0
	ICa() = gCa * (1 / (1 + exp((Vm -V) / sm))) * (V -VCa)
	arRates1() = ((1 / (1 + exp((Vs1 -V) / ss1))) -s1) / taus1
	arRates2() = ((1 / (1 + exp((Vs2 -V) / ss2))) -s2) / taus2
	parameter_1() = (gs1 * s1 * (V -VK)) + (gs2 * s2 * (V -VK))
	arRaten() = ((1 / (1 + exp((Vn -V) / sn))) -n) / (tnbar / (1 + exp((V -Vn) / sn)))
	arRateV() = -((gCa * (1 / (1 + exp((Vm -V) / sm))) * (V -VCa)) + (gK * n * (V -VK)) + (gl * (V -Vl)) + (gs1 * s1 * (V -VK)) + (gs2 * s2 * (V -VK))) / Cm
end functions
begin reaction rules
	0  <-> V()@Compartment arRateV,armRateV #rateLaw
	0  <-> n()@Compartment arRaten,armRaten #rateLaw
	0  <-> s1()@Compartment arRates1,armRates1 #rateLaw
	0  <-> s2()@Compartment arRates2,armRates2 #rateLaw
end reaction rules
end model
